「データベース」「アソシエーション」「ルーティング」「コントローラー」「ビュー」の実装が完了
これで、タグ付け機能は実装可能。

現状のアプリケーションでは、
すでにデータベースに存在する文字列のタグは保存できない。
tagsテーブルのnameカラムに一意性の制約を設けているため。
この場合、「tweet」に紐づく「tag」が生成されないため、
タグ付け機能としては成り立たない。
このように「既存のレコードが存在する場合は、
既存のレコードを反映させたい」という場合は、
first_or_initializeを使用する。


first_or_initialize
「first_or_initialize」は、
whereメソッドと一緒に使う。
whereで検索した条件のレコードがあればそのレコードのインスタンスを返し、
なければ新しくインスタンスを作るメソッド。


タグ付け機能の実装が完了。
しかし、まだ課題があり。
すでにデータベースへ保存されているタグをタグ付けしたい場合、
入力の途中で入力文字と一致するタグを候補として
画面上に表示できる検索機能があれば、
より便利なアプリケーションになる。
実際に候補を表示させる検索機能の実装を行う。
→逐次検索機能の実装

